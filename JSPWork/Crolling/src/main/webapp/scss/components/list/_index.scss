@use '../../common/' as *;
@use '../flex/mixin' as flex;
@use '../../common/color' as color;

/*list*/
ol[class*="list_"],
ul[class*="list_"]{
    &{
        font-size: 1em;
        display: block;
        width: 100%;
        padding-left:0.75em;
        line-height: 1.67;
    }
    &.list_dec {
        padding-left: 1em;
    }
    > li{
        display: block;
        position: relative;
        &:before{
            text-indent: -1.25em;
            position: absolute;
            text-align: center;
            display: inline;
        }
        ._tit {
            display: block;
            margin-top: 0;
            margin-bottom: em(5, 18);
            font-weight: 600;
            font-size: em(18, 16);
        }
	}
    @each $name, $color in color.$colors {
        &.c#{$name} > li::before{color: $color !important;}
    }
    .full {
        margin-left: -0.75em;
        margin-top: em(16, 18);
        .toggle_tit { font-size: em(18, 18);}
        .toggle_inner { font-size: em(18, 18);}
    }
    [data-first-letter] {
        & + [data-first-letter] {
            margin-top: 0;
        }
    }


    &.list_row {
        @include flex.flex-box;
        @include flex.flex-wrap('wrap');
        padding-left: 0;
        line-height: 1.6;
        & > li {
            padding-left:0.75em;
            margin-top: em(12, 18);
            & + li {
                margin-top: em(12, 18);
            }
            &::before {
                left: .125em;
            }
            @include tab {
                padding-right: em(16, 16);
                &::before { left: 0; }
                margin-top: em(12, 18);
                & + li {
                    margin-top: em(12, 18) !important;
                }
            }
        }
    }
}
.list_{

    &dot{
        > li{
            &:before{
                content: '\00B7';
            }
        }
    }
    &bullet{
        > li{
            &:before{
                content: '\2022';
                font-weight: 900;
            }
        }
    }
    &dash{
        > li{
            &:before{
                content: '-';
            }
        }
    }
    &circle {
        > li {
            &::before {
                content:'';
                width: em(4, 18);
                height: em(4, 18);
                left: -.625em;
                top: .65em;
                border-radius: 50%;
                background-color: map-get(color.$colors, 1);
            }
        }
    }
    &custom {
        > li {
            &::before {
                content:attr(data-custom);
            }
            &.small {
                &::before { font-size: .5em; }
            }
        }
    }

    &star{
        > li{
            &:before{
                content: '*';
            }
        }
    }

    &dec{
        counter-reset: my-awesome-counter;

        > li{
            counter-increment: my-awesome-counter;
            &:before{
                content: counter(my-awesome-counter)". ";
            }
        }
    }

    &dec_circle {
        counter-reset: my-awesome-counter;
        > li{
            counter-increment: my-awesome-counter;
            line-height: 1.66em;
            position: relative;

            &:before{
                content: counter(my-awesome-counter);
                margin-left: -0.25em !important;
                font-size: 0.7em;
                letter-spacing: -0.075em;
            }
            &::after{
                display: block;
                width: 0.9em !important;
                height: 0.9em !important;
                border: 1px solid #222;
                border-radius: 100%;
                position: absolute;
                top:0.36em;
                left:-0.6em;
                transform: translate(-50%, 0);
            }
        }
    }
}
